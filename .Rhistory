skew=(mm3^2/mm2^3);skew
#kurtosis
kurtosis=(mm4/mm2^2);kurtosis
#mean deviation about mean
mdxbar=sum(abs(midx-mean)*frequency)/sum(frequency);mdxbar
#mean deviation about median
mdmedian=sum(abs(midx-median)*frequency)/sum(frequency);mdmedian
x=seq(125,525,by=50)
x
y=c(02,22,19,14,03,04,06,01,01)
y
midx=seq(150,550,by=50)
width=50
lower.value=midx-width/2
upper.value=midx+width/2
frequency=c(02,22,19,14,03,04,06,01,01)
cummulative.frequency=cumsum(frequency)
data=data.frame(lower.value,upper.value,midx,frequency,cummulative.frequency);data
#(i)FINDING MEAN,MEDIAN and MODE
mean=sum(y*midx)/sum(y);mean
length(midx)
length(frequency)
72/2
lower.median.class=data[3,1]
lower.median.class
prece.c.f=data[2,5]
prece.c.f
class.freq=data[3,4]
class.freq
h=width;h
fx=midx*frequency;fx
N=sum(frequency);N/2
median=lower.median.class+((N/2)-prece.c.f)*h/class.freq
median
data2=data.frame(lower.value,upper.value,midx,frequency,cummulative.frequency,fx);data2
max.freq=max(frequency)
max.freq
lower.mode.class=data[2,1];lower.mode.class
class.freq=data[2,4];class.freq
prece.class.freq=data[1,4];prece.class.freq
secce.class.freq=data[3,4];secce.class.freq
mode=lower.mode.class+((class.freq-prece.class.freq)*h)/(2*class.freq-prece.class.freq-secce.class.freq);mode
#quartiles
#q1
N=sum(frequency);N/4
lower.quatile.class=data[2,1]
prece.c.f=data[1,5];prece.c.f
class.freq=data[2,4];class.freq
h=width;h
Q1=lower.quatile.class+(((N/4)-prece.c.f)*h)/class.freq;Q1
#q2
N=sum(frequency);N/2
lower.quatile.class=data[3,1];lower.quatile.class
prece.c.f=data[2,5];prece.c.f
class.freq=data[3,4];class.freq
h=width;h
Q2=lower.quatile.class+(((2*N/4)-prece.c.f)*h)/class.freq;Q2
#Q3
N=sum(frequency);3*N/4
lower.quatile.class=data[4,1];lower.quatile.class
prece.c.f=data[3,5];prece.c.f
class.freq=data[4,4];class.freq
h=width;h
Q3=lower.quatile.class+(((3*N/4)-prece.c.f)*h)/class.freq;Q3
#using the method of scaling
#first four central moments
A=350
u=(midx-A)/h;u
fu=frequency*u;fu
fu2=frequency*u^2;fu2
fu3=frequency*u^3;fu3
fu4=frequency*u^4;fu4
data2=data.frame(lower.value,upper.value,midx,frequency,cummulative.frequency,u,fu,fu2,fu3,fu4);data2
#moments about origin
m1=(1/N)*sum(fu);m1
m2=(1/N)*sum(fu2);m2
m3=(1/N)*sum(fu3);m3
m4=(1/N)*sum(fu4);m4
#central moments
mm2=m2-m1^2;mm2
mm3=m3-3*m2*m1+2*m1^3;mm3
mm4=m4-4*m3*m1+6*m1^2*m2-3*m1^4;mm4
#skewness
skew=(mm3^2/mm2^3);skew
#kurtosis
kurtosis=(mm4/mm2^2);kurtosis
#mean deviation about mean
mdxbar=sum(abs(midx-mean)*frequency)/sum(frequency);mdxbar
#mean deviation about median
mdmedian=sum(abs(midx-median)*frequency)/sum(frequency);mdmedian
x=0:5
n=5
p=0.8
windows()
par(mfrow=c(1,3))
f1=dbinom(x,n,p);f1
plot(x,f1,type = "h",xlab="x",ylab = "y",main = "distribution function")
pints(x,f1)
points(x,f1)
x=0:5
n=5
p=0.8
windows()
par(mfrow=c(1,3))
f1=dbinom(x,n,p);f1
plot(x,f1,type = "h",xlab="x",ylab = "y",main = "distribution function")
points(x,f1)
x=0:5
n=5
p=0.8
windows()
par(mfrow=c(1,3))
f1=dbinom(x,n,p);f1
plot(x,f1,type = "h",xlab="x",ylab = "y",main = "distribution function")
points(x,f1)
x=0:5
n=5
p=0.5
f2=dbinom(x,n,p);f2
plot(x,f2,type="h",xlab = "x",ylab = "y",main = "distribution function")
points(x,f2)
rbinom?
rm(list = ls())
x=0:5;x
x=rbinom(100,n,p);x
x=0:5;x
n=5
p=0.2
x=rbinom(100,n,p);x
fx=dbinom(x,n,p),fx
x=0:5;x
n=5
p=0.2
x=rbinom(100,n,p);x
fx=dbinom(x,n,p),fx
fx=dbinom(x,n,p);fx
x1=sort(unique(x));x1
xt=table(x);xt
rxt=xt/length(x);rxt
plot(x1,rxt,type = "h",lwd=2)
points(x1,rxt,pch=15)
windows()
par(mfrow=c(1,3))
x=0:5;x
n=5
p=0.2
x=rbinom(100,n,p);x
fx=dbinom(x,n,p);fx
x1=sort(unique(x));x1
xt=table(x);xt
rxt=xt/length(x);rxt
plot(x1,rxt,type = "h",lwd=2)
points(x1,rxt,pch=15)
x=0:5
n=5
p=0.8
x1=rbinom(100,n,p);x1
fx=dbinom(x,n,p);fx
x2=sort(unique(x1));x2
xt=table(xt)
xt=table(xt);xt
rxt=x2/length(x2);rxt
plot(x2,rxt,type="h",lwd=2)
points(x2,rxt)
xt=table(x1):xt
x=0:5
n=5
p=0.8
x1=rbinom(100,n,p);x1
fx=dbinom(x,n,p);fx
x2=sort(unique(x1));x2
xt=table(x1):xt
rxt=x2/length(x2);rxt
plot(x2,rxt,type="h",lwd=2)
points(x2,rxt)
midx=seq(150,550,by=50)
width=50
lower.value=midx-width/2
upper.value=midx+width/2
reticulate::repl_python()
print(c)
c="harr"
print(c)
c="harr"
print(c)
data
data=read.csv("C:\Users\rahul\Downloads\data.csv")
data=read.table(file=choose.files(),header=TRUE,sep=",")
rm(list=ls())
data=read.table(file=choose.files(),header=TRUE,sep=",")
data
lm=lm(x~y);lm
rm(list=ls())
data=read.table(file=choose.files(),header=TRUE,sep=",")
data
x=data$Body.Weight
y=data$RMR
lm=lm(x~y);lm
lm=lm(y~x);lm
residual=lm.residuals
residual=lm$residuals
residual=lm$residuals;residual
head(data,3)
tail(data,5)
summary(lm)
fitted=lm$fitted.values
qqplot(fitted,residual,main="residual vs fitted")
plot(residual)
abline(1,0)
plot(density(residual))
t=abs(qt(0.025,42));t
confint(lm)
w=(250-811.23)/7.06;w
rm(list=ls())
data=read.table(file=choose.files(),header=TRUE,sep=",")
data
x=data$Body.Weight
y=data$RMR
head(data,3)
tail(data,5)
lm=lm(y~x);lm
rm(list=ls())
data=read.table(file="C:\Users\rahul\Downloads\data.csv",header=TRUE,sep=",")
lm=lm(y~x);lm
y=data$RMR
data
data=read.table(file="C:\Users\rahul\Downloads\data.csv",header=TRUE,sep=",")
rm(list=ls())
data=read.csv(file="C:\Users\rahul\Downloads\data.csv",header=TRUE,sep=",")
data=read.csv(file="C:\Users\rahul\Downloads\data.csv")
data=read.csv("C:\Users\rahul\Downloads\data.csv")
data=read.csv(data.csv)
data=read.csv("C:\Users\rahul\Downloads\data.csv")
data=read.csv("C\Users\rahul\Downloads\data.csv")
data=read.csv("\Users\rahul\Downloads\data.csv")
library(readr)
data <- read_csv("data.csv")
View(data)
data=read.csv(file = data.csv)
data=read.csv(file = ~data)
data=read.csv (~data)
rm(list=ls())
data=read.table(file=choose.files(),header=TRUE,sep=",")
data
x=data$Body.Weight
y=data$RMR
head(data,3)
tail(data,5)
lm=lm(y~x);lm
summary(lm)
residual=lm$residuals;residual
fitted=lm$fitted.values
qqplot(fitted,residual,main="residual vs fitted")
plot(residual)
abline(1,0)
plot(density(residual))
t=abs(qt(0.025,42));t
confint(lm)
w=(250-811.23)/7.06;w
lot(density(residual))
5lot(density(residual))
5lot(density(residual))
data=read.csv("data.csv")
data=read.csv("data.csv",header=TRUE,sep=",")
rm(list=ls())
data=read.csv("data.csv",header=TRUE,sep=",")
data
x=data$Body.Weight
y=data$RMR
head(data,3)
tail(data,5)
lm=lm(y~x);lm
summary(lm)
residual=lm$residuals;residual
fitted=lm$fitted.values
qqplot(fitted,residual,main="residual vs fitted")
plot(residual)
abline(1,0)
plot(density(residual))
t=abs(qt(0.025,42));t
confint(lm)
w=(250-811.23)/7.06;w
data=read.csv("SP data.csv");data
model=lm(y~x);lm
model=lm(y~x);model
plot(data)
model=lm(y~x);model
data=read.csv("SP data.csv");data
x=data$BP..mm.
y=data$SP.Decibel.
plot(data)
model=lm(y~x);model
abline(model)
plot(x,y)
model=lm(y~x);model
abline(model)
plot(data)
data=read.csv("SP data.csv");data
x=data$BP..mm.
y=data$SP.Decibel.
plot(data)
model=lm(y~x);model
abline(model)
summer(model)
summery(model)
summary(model)
r-squared=summary(model)$r.squared
r_squared <- summary(model)$r.squared
print(paste("R²:", r_squared))
r_squared <- summary(model)$r.squared
r-squared=summary(model)$r.squared
r_squared = summary(model)$r.squared
r_squared=summary(model)$r.squared
print(paste("R²:", r_squared))
summary(model)$r
summary(model)$r.squared
summary(model)$r.square
summary(model)$r.squ
summary(model)$r.
summary(model)$r
summary(model)$r.
model_new <- lm(y ~ x, data = data)
summary_new <- summary(model_new)
# Check available components
names(summary_new)
names(summaryt)
names(summary)
summary=summary(model)
names(summary)
data=read.csv("SP data.csv");data
x=data$BP..mm.
y=data$SP.Decibel.
plot(data)
model=lm(y~x);model
abline(model)
summary=summary(model)
r_squared=summary(model)$r.squared
print(paste("R²:", r_squared))
names(summary)
confint(model, level = 0.95)
predicted_bp <- predict(model, newdata = data.frame(SP = 85))
print(paste("Predicted BP for SP = 85:", predicted_bp))
iris$sepal.ratio=iris$Sepal.Length/iris$Sepal.Width
iris$petal.ratio=iris$Petal.Length/iris$Petal.Width
iris
iris[iris$Petal.Width>0.8 & iris$Species=="setosa"]
iris[iris$Petal.Width>0.8 & iris$Species=="setosa",]
iris[iris$Petal.Width>0.8 & iris$Species=="verginica",]
iris[iris$Petal.Width>0.5 & iris$Species=="verginica",]
iris[iris$Petal.Width>0.5 & iris$Species=="setosa",]
subset(iris, Petal.Width>0.5 , Species=="setosa")
subset(iris, Petal.Width>0.5 & Species=="setosa")
summary(iris)
str(iris)
breif(iris)
brief(iris)
library(car)
brief(iris)
summarize(iris, sepallength.mean=mean(iris$Sepal.Length)
summarise(iris, sepallength.mean=mean(iris$Sepal.Length)
summarise(iris, sepallength.mean=mean(Sepal.Length)
summarise(iris, sepallength.mean=mean(Sepal.Length)
summarise(iris, sepallength.mean=mean(Sepal.Length))
summarise(iris,
sepallength.mean=mean(Sepal.Length))
summarise(iris,
sepallength.mean=mean(Sepal.Length))
summarise(iris,
sepallength.mean=mean(Sepal.Length)
)
summarise(iris,
sepal.length.mean=mean(Sepal.Length),
petal.length.mean=mean(Petal.Length)
)
install.packages("dplyr")
library(dplyr)
summarise(iris,
sepal.length.mean=mean(Sepal.Length),
petal.length.mean=mean(Petal.Length)
)
################################################
library(car)
dim(Davis)
head(Davis)
output=data.frame(matrix(nrow=Davis),)
output=data.frame(matrix(nrow=dim(Davis)[1],ncol=dim(Davis)[2]))
output
dim(output)
colnames(output)=c("sex","weight","height","repwt","repht")
output
colnames(output)=c("Gender","Wt","Ht","Repwt","Repht")
output$Gender=Davis$sex
output$Wt=Davis$weight
output$Ht=Davis$height
output$Repwt=Davis$repwt
output$Repht=Davis$repht
head(output)
library(UsingR)
head(Cars93)
d=cars[1:3,1:4]
d=Cars93[1:3,1:4]
d
str(d)
summary(d)
d[3,c(2,4)]=c("A",40)
d
levels(d$Model)
d$Model=droplevels(d$Model)
levels(d$Model)
leves(d$Model)=c(levels(d$Model),c("A1","A"))
levels(d$Model)=c(levels(d$Model),c("A1","A"))
levels(d$Model)
d[3,c(2,4)]=c("A",40)
d
d[3,c(2,4)]=list("A",40)
d
d[4,]=list("Audi","A1",midsize,30)
d[4,]=list("Audi","A1","midsize",30)
d[4,]=list("Audi","A1","Midsize",30)
d
d=rbind(d,list("Audi","A1","Midsize",30))
d
d[,5]=d$Min.Price*1.3
d[,5]=d$Min.Price*1.3
d[,5]=d$Min.Price*2
summary(d)
d$Min.Price=as.numeric(d$Min.Price)
d[,5]=d$Min.Price*2
d
colnames(d)=("Mod_Price")
d
colnames(d,5)="Mod_price"
colnames(d[5])="Mod_price"
d
colnames(d[,5])="Mod_price"
library(UsingR)
head(Cars93)
d=Cars93[1:3,1:4]
d
str(d)
summary(d)
d[3,c(2,4)]=c("A",40)
levels(d$Model)
d$Model=droplevels(d$Model)
levels(d$Model)=c(levels(d$Model),c("A1","A"))
d[3,c(2,4)]=list("A",40)
d
d[4,]=list("Audi","A1","Midsize",30)
d
d=rbind(d,list("Audi","A1","Midsize",30))
d
d$Min.Price=as.numeric(d$Min.Price)
d[,5]=d$Min.Price*2
d
colnames(d)[5]="Mod_price"
d
d$Mod_price=d$Min.Price*2
d=within(d,(Mod_price=d$Min.Price*2))
d
speed.1=c(100,20,21,54,12,14)
speed.2=c(80,90,56,12,29,78)
speed.3=c(56,57,59,58,91,96)
speed.4=c(56,57,59,58,91,96)
speed.5=c(56,57,59,58,91,96)
id=c(1,2,3,4,5,6)
Run=c("A","B","C","D","E","F")
speed=cbind.data.frame(id,Run,speed.1,speed.2,speed.3,speed.4,speed.5)
head(speed)
summary(speed)
str(speed)
library(reshape2)
install.packages("reshape.2")
install.packages("reshape2")
library(reshape2)
library(reshape2)
long=melt(speed,id.vars = names(speed)[1:2],varaible.name="speed")
head(long)
long=melt(speed,id.vars = names(speed)[1:2],varaible.name="Speed")
head(long)
wide=dcast(long,id+run~speed)
wide=dcast(long,id+Run~speed)
long=melt(speed,id.vars = names(speed)[1:2],variable.name="Speed")
head(long)
wide=dcast(long,id+Run~speed)
wide=dcast(long,id+Run~Speed)
head(wide)
v1=c("marvel","dc","anime")
v2=c(50,65,90)
cinema=cbind(v1,v2)
cinema
colnames(cinema)=c("Universe","Tickets")
cinema
cinema
v3=c("marvel","dc","Animeplex")
v4=c(50,65,90)
Theater=cbind(v3,v4)
head(Theater)
colnames(Theater)=c("universe","tickets")
head(Theater)
final=merge(cinema,Theater,by.x="Universe")
final=merge(cinema,Theater,by.x="Universe",by.y="universe")
head(final)
final=merge(cinema,Theater,by.x="Universe",by.y="tickets")
head(final)
final=merge(cinema,Theater,by.x="Universe",by.y="universe")
head(final)
final=merge(cinema,Theater,by.x="Universe",by.y="universe",all=T)
head(final)
setwd("C:/Users/rahul/Downloads/project")
setwd("C:/Users/rahul/Downloads/project")
multi_model <- readRDS("C:/Users/rahul/Downloads/project/models/multi_model.rds")
multi_model <- readRDS("C:/Users/rahul/Downloads/project/models/multi_model.rds")
